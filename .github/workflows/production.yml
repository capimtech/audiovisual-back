name: Production CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: npm install --legacy-peer-deps --frozen-lockfile
      - run: npm run lint
      - run: npm run typeorm migration:run
        env:
          DATABASE_HOST: ${{ secrets.DATABASE_PROD_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PROD_PORT }}
          DATABASE_USER: ${{ secrets.DATABASE_PROD_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PROD_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_PROD_NAME }}

  build:
    needs: lint 
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME_PROD}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          remote_branch: master
